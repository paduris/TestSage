version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: testsage-db
    environment:
      POSTGRES_DB: testsage
      POSTGRES_USER: testsage
      POSTGRES_PASSWORD: hackathon2025
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - testsage-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testsage"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: testsage-api
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/testsage
      SPRING_DATASOURCE_USERNAME: testsage
      SPRING_DATASOURCE_PASSWORD: hackathon2025
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - testsage-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: testsage-frontend
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://backend:8080
    depends_on:
      - backend
    networks:
      - testsage-net

volumes:
  postgres_data:

networks:
  testsage-net:
    driver: bridge